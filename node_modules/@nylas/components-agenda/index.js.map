{"version":3,"file":"index.js","sources":["../../commons/src/define-component-patch.ts","../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte/motion/index.mjs","../../commons/src/store/error.ts","../../commons/src/methods/api.ts","../../commons/src/connections/events.ts","../../commons/src/connections/threads.ts","../../commons/src/connections/manifest.ts","../../commons/src/store/calendars.ts","../../commons/src/store/events.ts","../../commons/src/store/threads.ts","../../commons/src/store/manifest.ts","../../commons/src/methods/component.ts","../../commons/src/components/NErrorMapping.ts","../../commons/src/components/NError.svelte","src/methods/position.ts","src/methods/time.ts","src/Agenda.svelte"],"sourcesContent":["export const originalDefine = window.customElements.define.bind(\n  window.customElements,\n);\nwindow.customElements.define = (name: string, ...args) => {\n  if (customElements.get(name)) {\n    return;\n  }\n  return originalDefine(name, ...args);\n};\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","import { Writable, writable } from \"svelte/store\";\n\ntype ErrorStore = Record<string, Nylas.Manifest[\"error\"]>;\n\nfunction initialize(): Writable<ErrorStore> {\n  return writable({});\n}\n\nexport const ErrorStore = initialize();\n","import { ErrorStore } from \"../store/error\";\n\nexport async function handleResponse<T = unknown>(\n  response: Response,\n): Promise<T> {\n  if (!response.ok) {\n    const passedError = await response\n      .json()\n      .then((json: { message: string; name: string }) => json);\n    const error = new Error(passedError.message);\n    error.name = passedError.name;\n    throw { message: error, statusCode: response.status };\n  }\n  return response.json();\n}\n\ntype HTTPMethod = \"POST\" | \"GET\" | \"PUT\" | \"PATCH\" | \"OPTIONS\" | undefined;\n\ntype FetchOptions = {\n  body?: unknown;\n  method?: HTTPMethod;\n  component_id?: string;\n  access_token?: string;\n};\n\nexport function getFetchConfig(\n  opts: FetchOptions = { component_id: \"\" },\n): RequestInit {\n  return {\n    method: opts.method || \"GET\", // GET is default method\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-Component-Id\": opts.component_id || \"\", // Component ID is passed as header\n      \"X-Access-Token\": opts.access_token || \"\", // Access Token is passed as header\n    },\n    body: opts.body ? JSON.stringify(opts.body) : undefined,\n  };\n}\n\nexport function handleError(id: string, error: Nylas.Manifest[\"error\"]): never {\n  if (process.env.NODE_ENV !== \"production\") console.error(error);\n  ErrorStore.update((errorMap) => ({ ...errorMap, [id]: error }));\n  throw error;\n}\n\nconst REGION_MAPPING: Record<string, string> = {\n  \"001\": \"\", // US\n  \"002\": \"ireland-\", // EU\n  \"003\": \"canada-\", // Canada\n};\n\nexport function getMiddlewareApiUrl(id: string): string {\n  let region = \"\";\n  if (id.substring(3, 4) === \"-\") {\n    const code = id.substring(0, 3);\n    if (typeof REGION_MAPPING[code] !== \"undefined\") {\n      region = REGION_MAPPING[code];\n    }\n  }\n  const API_GATEWAY = `https://${region}${process.env.API_GATEWAY}`;\n  return API_GATEWAY;\n}\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\n\nexport const fetchEvents = async (\n  query: Events.EventQuery,\n): Promise<Events.Event[]> => {\n  return Promise.all(\n    query.calendarIDs.map((calendar) => {\n      return fetch(\n        `${getMiddlewareApiUrl(\n          query.component_id || \"\",\n        )}/agenda/events?calendar_id=${calendar}&starts_after=${\n          query.starts_after - 1\n        }&ends_before=${query.ends_before}&expand_recurring=true`,\n        getFetchConfig({\n          component_id: query.component_id,\n          access_token: query.access_token,\n        }),\n      )\n        .then((response) =>\n          handleResponse<Nylas.MiddlewareResponse<Events.Event[]>>(response),\n        )\n        .then((json) => {\n          return json.response;\n        });\n    }),\n  )\n    .then((responses) => {\n      return responses.flat();\n    })\n    .catch((error) => handleError(query.component_id || \"unknown\", error));\n};\n\nexport const fetchCalendars = async (\n  query: Events.CalendarQuery,\n): Promise<Events.Calendar[]> => {\n  return Promise.allSettled(\n    query.calendarIDs.map((calendar: unknown) => {\n      return fetch(\n        `${getMiddlewareApiUrl(\n          query.component_id || \"\",\n        )}/calendars/${calendar}`,\n        getFetchConfig({\n          component_id: query.component_id,\n          access_token: query.access_token,\n        }),\n      )\n        .then((response) =>\n          handleResponse<Nylas.MiddlewareResponse<Events.Calendar[]>>(response),\n        )\n        .then((json) => {\n          return json.response;\n        });\n    }),\n  )\n    .then((responses) => {\n      const filteredResponses = responses\n        .filter((calendar) => calendar.status === \"fulfilled\")\n        .map((cal) => cal.value);\n      return filteredResponses.flat();\n    })\n    .catch((error) => handleError(query.component_id || \"unknown\", error));\n};\n\nexport async function createEvent(\n  event: Events.Event,\n  query: Events.EventQuery,\n): Promise<Events.Event> {\n  return fetch(\n    `${getMiddlewareApiUrl(query.component_id || \"\")}/agenda/events`,\n    getFetchConfig({\n      method: \"POST\",\n      component_id: query.component_id,\n      access_token: query.access_token,\n      body: event,\n    }),\n  )\n    .then((response) =>\n      handleResponse<Nylas.MiddlewareResponse<Events.Event>>(response),\n    )\n    .then((json) => {\n      return json.response;\n    });\n}\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\n\nexport const fetchThreads = async (\n  query: Nylas.MailboxQuery,\n): Promise<Nylas.Thread[]> => {\n  let queryString = `${getMiddlewareApiUrl(\n    query.component_id,\n  )}/threads?view=expanded`;\n  if (query.query) {\n    Object.entries(query.query).forEach(\n      (param) => (queryString = queryString.concat(`&${param[0]}=${param[1]}`)),\n    );\n  }\n  return await fetch(queryString, getFetchConfig(query))\n    .then((response) =>\n      handleResponse<Nylas.MiddlewareResponse<Nylas.Thread[]>>(response),\n    )\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n\nexport const fetchThread = async (\n  query: Nylas.ConversationQuery,\n): Promise<Nylas.Conversation> => {\n  const thread = await fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/threads/${\n      query.thread_id\n    }?view=expanded`,\n    getFetchConfig({\n      component_id: query.component_id,\n      access_token: query.access_token,\n    }),\n  )\n    .then((response) =>\n      handleResponse<Nylas.MiddlewareResponse<Nylas.Conversation>>(response),\n    )\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n\n  return thread;\n};\n\nexport const updateThread = async (\n  query: Nylas.ConversationQuery,\n  updatedThread: Nylas.Conversation,\n): Promise<Nylas.Conversation> => {\n  // accepts unread, starred, folder_id + label_ids. developer.nylas.com/docs/api/#put/threads/id\n  return fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/threads/${updatedThread.id}`,\n    getFetchConfig({\n      method: \"PUT\",\n      component_id: query.component_id,\n      body: {\n        unread: updatedThread.unread,\n        starred: updatedThread.starred,\n      },\n    }),\n  )\n    .then((response) =>\n      handleResponse<Nylas.MiddlewareResponse<Nylas.Conversation>>(response),\n    )\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\n\nexport const fetchManifest = async (\n  id: string,\n  access_token?: string,\n): Promise<Nylas.Manifest> => {\n  return await fetch(\n    `${getMiddlewareApiUrl(id)}/manifest`,\n    getFetchConfig({\n      access_token,\n      component_id: id,\n    }),\n  )\n    .then<Nylas.MiddlewareResponse>(handleResponse)\n    .then((response) => response.component.theming)\n    .catch((error) => handleError(id, error));\n};\n","import { writable } from \"svelte/store\";\nimport { fetchCalendars } from \"../connections/events\";\n\nfunction initializeCalendars() {\n  const { subscribe, update, set } = writable<\n    Record<string, Promise<Events.Calendar[]>>\n  >({});\n  let calendarMap: Record<string, Promise<Events.Calendar[]>> = {};\n\n  return {\n    subscribe,\n    getCalendars: async (query: Events.CalendarQuery) => {\n      const queryKey = JSON.stringify(query);\n      if (!calendarMap[queryKey] && (query.component_id || query.access_token)) {\n        calendarMap[queryKey] = fetchCalendars(query);\n        update((calendars) => {\n          calendars[queryKey] = calendarMap[queryKey];\n          return { ...calendars };\n        });\n      }\n\n      return await calendarMap[queryKey];\n    },\n    reset: () => {\n      calendarMap = {};\n      set({});\n    },\n  };\n}\n\nexport const CalendarStore = initializeCalendars();\n","import { writable } from \"svelte/store\";\nimport { createEvent, fetchEvents } from \"../connections/events\";\n\nfunction initializeEvents() {\n  const { subscribe, update, set } = writable<\n    Record<string, Promise<Events.Event[]>>\n  >({});\n  let eventsMap: Record<string, Promise<Events.Event[]>> = {};\n\n  return {\n    subscribe,\n    getEvents: async (query: Events.EventQuery) => {\n      if (Array.isArray(query.calendarIDs) && query.calendarIDs.length > 0) {\n        const queryKey = JSON.stringify(query);\n        if (\n          !eventsMap[queryKey] &&\n          (query.component_id || query.access_token)\n        ) {\n          eventsMap[queryKey] = fetchEvents(query);\n          update((events) => {\n            events[queryKey] = eventsMap[queryKey];\n            return { ...events };\n          });\n        }\n        return await eventsMap[queryKey];\n      }\n    },\n    createEvent: (event: Events.Event, query: Events.EventQuery) => {\n      const queryKey = JSON.stringify(query);\n      if (!!eventsMap[queryKey]) {\n        eventsMap[queryKey] = Promise.all([\n          eventsMap[queryKey],\n          createEvent(event, query),\n        ]).then((events) => {\n          return events.flat();\n        });\n      } else {\n        eventsMap[queryKey] = createEvent(event, query).then((event) => {\n          return [event];\n        });\n      }\n\n      update((events) => {\n        events[queryKey] = eventsMap[queryKey];\n        return { ...events };\n      });\n    },\n    reset: () => {\n      eventsMap = {};\n      set({});\n    },\n  };\n}\n\nexport const EventStore = initializeEvents();\n","import { derived, writable } from \"svelte/store\";\nimport { fetchThread, fetchThreads } from \"../connections/threads\";\n\nfunction initializeThreads() {\n  const { subscribe, set, update } = writable<Record<string, Nylas.Thread[]>>(\n    {},\n  );\n  let threadsMap: Record<string, Nylas.Thread[]> = {};\n\n  return {\n    subscribe,\n    set,\n    getThreads: async (query: Nylas.MailboxQuery, forceRefresh = false) => {\n      const queryKey = JSON.stringify(query);\n      if (\n        (!threadsMap[queryKey] || forceRefresh) &&\n        (query.component_id || query.access_token)\n      ) {\n        threadsMap[queryKey] = (await fetchThreads(query)).map((thread) => {\n          thread.toString = () => thread.id;\n          return thread;\n        });\n      }\n      update((threads) => {\n        threads[queryKey] = threadsMap[queryKey];\n        return { ...threads };\n      });\n      return threadsMap[queryKey];\n    },\n\n    getThread: async (query: Nylas.ConversationQuery) => {\n      const queryKey = JSON.stringify(query);\n      if (!threadsMap[queryKey] && (query.component_id || query.access_token)) {\n        threadsMap[queryKey] = [await fetchThread(query)];\n      }\n      update((threads) => {\n        threads[queryKey] = threadsMap[queryKey];\n        return { ...threads };\n      });\n      return threadsMap[queryKey];\n    },\n\n    reset: () => {\n      threadsMap = {};\n      set({});\n    },\n\n    // addThreads: (incomingThreads: Nylas.StoredThreads) => {\n    //   update((threads) => {\n    //     threads[incomingThreads.queryKey] = incomingThreads.data;\n    //     return { ...threads };\n    //   });\n    // },\n\n    hydrateMessageInThread: (\n      incomingMessage: Nylas.Message,\n      query: Nylas.MailboxQuery,\n    ) => {\n      const queryKey = JSON.stringify(query);\n      const foundThread = threadsMap[queryKey].find(\n        (thread) => thread.id === incomingMessage.thread_id,\n      );\n      if (foundThread) {\n        foundThread.messages.find(\n          (message) => message.id === incomingMessage.id,\n        ).body = incomingMessage.body;\n      }\n      update((threads) => {\n        threads[incomingMessage.thread_id] = JSON.parse(\n          JSON.stringify(foundThread),\n        );\n        return { ...threads };\n      });\n      return threadsMap[JSON.stringify(query)];\n    },\n  };\n}\n\nexport const MailboxStore = initializeThreads();\n\nexport const Threads = derived(MailboxStore, ($mailboxes) => {\n  // console.log('Threads deriving', $mailboxes);\n  return Object.values($mailboxes).flat();\n});\n","import { fetchManifest } from \"../connections/manifest\";\nimport { Writable, writable } from \"svelte/store\";\n\ntype ManifestAccessor = { component_id: string; access_token?: string };\ntype ManifestStore = Record<string, Promise<Nylas.Manifest>>;\n\nfunction initialize(): Writable<ManifestStore> {\n  const get = (\n    target: ManifestStore,\n    key: string,\n  ): Promise<Nylas.Manifest> | void => {\n    const accessor: ManifestAccessor = JSON.parse(key);\n\n    if (!accessor.component_id) return;\n\n    if (!target[key]) {\n      const fetchPromise = fetchManifest(\n        accessor.component_id,\n        accessor.access_token,\n      );\n      store.update((store) => ({\n        ...store,\n        [key]: fetchPromise,\n      }));\n      target[key] = fetchPromise;\n    }\n    return target[key];\n  };\n  const store = writable(new Proxy<ManifestStore>({}, { get }));\n  return store;\n}\n\nexport const ManifestStore = initialize();\n","export function getEventDispatcher(component: {\n  dispatchEvent?: (e: Event) => boolean;\n}) {\n  return (name: string, detail: unknown): void => {\n    if (component.dispatchEvent) {\n      component.dispatchEvent(\n        new CustomEvent(name, {\n          detail,\n          composed: true, // propagate across the shadow DOM\n        }),\n      );\n    }\n  };\n}\n\nexport function debounce(\n  fn: (args: unknown) => unknown,\n  time: number,\n): () => void {\n  let timeoutId: number;\n  return (): void => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(fn, time);\n  };\n}\n\nexport function buildInternalProps<T extends Nylas.Manifest>(\n  properties: T,\n  manifest: Nylas.Manifest,\n): T {\n  return new Proxy(properties, {\n    get: (properties, name: keyof Nylas.Manifest) => {\n      if (name in properties) {\n        return properties[name];\n      } else if (manifest && name in manifest) {\n        return manifest[name];\n      }\n    },\n  });\n}\n\nexport function getPropertyValue<T>(\n  propValue: any,\n  currentValue: T,\n  defaultTo: T,\n): T {\n  if (propValue) {\n    return typeof defaultTo === \"boolean\"\n      ? (parseBoolean(propValue) as any)\n      : propValue;\n  }\n\n  return currentValue === undefined ? defaultTo : currentValue;\n}\n\nexport function parseBoolean(\n  val: string | boolean | undefined | null,\n): boolean {\n  return (<any>[true, \"true\", \"1\"]).includes(val);\n}\n","export type Explanation = {\n  title: string;\n  subtitle: string;\n};\n\nexport type NErrorType = [\n  \"DatabaseError\",\n  \"HostDomainNotAllowedError\",\n  \"RequestNotAllowed\",\n  \"UserInputError\",\n  \"MiddlewareError\",\n];\n\ntype INErrorExplanationMap = {\n  [Key in NErrorType[number]]: () => Explanation;\n};\n\nexport const NErrorExplanationMap: INErrorExplanationMap =\n  new Proxy<INErrorExplanationMap>(\n    {\n      DatabaseError: () => ({\n        title: \"\",\n        subtitle: \"\",\n      }),\n      HostDomainNotAllowedError: () => ({\n        title: `\n        You are trying to access this component from <code>${window.location.hostname}</code>. \n        The component's settings do not allow access from this domain.\n      `,\n        subtitle: `The list of allowed domains can be modified in your <a href=\"https://dashboard.nylas.com\">Dashboard</a>.`,\n      }),\n      RequestNotAllowed: () => ({\n        title: \"\",\n        subtitle: \"\",\n      }),\n      UserInputError: () => ({\n        title: \"\",\n        subtitle: \"\",\n      }),\n      MiddlewareError: () => ({\n        title: \"\",\n        subtitle: \"\",\n      }),\n    } as INErrorExplanationMap,\n    {\n      get: (target, prop: keyof INErrorExplanationMap) =>\n        target[prop] || target.MiddlewareError, // fall back to middleware error\n    },\n  );\n","<svelte:options tag=\"nylas-error\" immutable={true} />\n\n<script lang=\"ts\">\n  import { NErrorExplanationMap } from \"./NErrorMapping\";\n  import { ErrorStore } from \"../index\";\n\n  export let id; // component id\n\n  $: error = $ErrorStore[id] || { name: \"\" };\n  $: explanation = NErrorExplanationMap[error.name]();\n</script>\n\n<style>\n  .message-container {\n    padding: 0.5rem;\n    font-size: 11px;\n    color: red;\n    text-align: initial;\n  }\n\n  .message-container *:focus {\n    outline: 5px auto Highlight;\n    outline: 5px auto -webkit-focus-ring-color;\n  }\n\n  .details {\n    font-size: 8px;\n    color: #494949;\n  }\n</style>\n\n{#if error.name}\n  <div class=\"message-container\">\n    <h3>\n      {@html explanation.title}\n    </h3>\n    <h4>\n      {@html explanation.subtitle}\n    </h4>\n    <span class=\"details\">Debug info:</span>\n    <textarea class=\"details\" readonly cols={64}>\n      {error.name}: {id}\n    </textarea>\n  </div>\n{/if}\n","export interface EventPosition {\n  overlaps: Events.TimespanEvent[];\n  offset: number;\n  leftNeighbour: Events.TimespanEvent | null;\n  widthOverride?: number;\n}\n\n// Controls how granular the time slot \"buckets\" are in minutes.\n// Decreasing this value will improve event overlap calculation, but will impact performance and memory.\nconst EVENT_OVERLAP_GRANULARITY = 10;\n\nexport function populatePositionMap(\n  events: Events.TimespanEvent[],\n  positionMap: Record<string, EventPosition>,\n) {\n  // Populate the position map with each event's overlaps\n  events.forEach((event) => {\n    positionMap[event.id] = {\n      overlaps: events.filter((other: Events.TimespanEvent) => {\n        return (\n          event.id !== other.id &&\n          other.when.start_time < event.when.end_time &&\n          other.when.end_time > event.when.start_time\n        );\n      }),\n      offset: 0,\n      leftNeighbour: null,\n    };\n  });\n}\n\nexport function updateEventPosition(\n  event: Events.TimespanEvent,\n  positionMap: Record<string, EventPosition>,\n) {\n  const overlappingEvents = positionMap[event.id].overlaps;\n\n  // Events without overlaps can be placed without extra logic\n  if (overlappingEvents.length === 0) {\n    event.relativeOverlapWidth = 1;\n    event.relativeOverlapOffset = 0;\n    return;\n  }\n\n  // A left neighbour is an overlapping event that has already been positioned to the left of this event\n  const leftNeighbour = positionMap[event.id].leftNeighbour;\n\n  if (\n    !!leftNeighbour &&\n    overlappingEvents.filter(\n      (overlappingEvent) =>\n        event.when.end_time - event.when.start_time >=\n        overlappingEvent.when.end_time - overlappingEvent.when.start_time,\n    ).length === 0\n  ) {\n    // If the current event has a left neighbour and no overlapping event that is shorter than it, we assume\n    // that this will be the right-most event. In this case, the event is sized to take up the remaining width.\n    event.relativeOverlapWidth = 1 - leftNeighbour.relativeOverlapWidth;\n  } else {\n    event.relativeOverlapWidth = calculateEventWidth(event, overlappingEvents);\n  }\n\n  // Set the event's offset from the left margin\n  event.relativeOverlapOffset = positionMap[event.id].offset;\n\n  // Handles an edge case where an event straddles two events, creating a staircase layout\n  // This workaround repositions the straddled event as far left as possible\n  // TODO - Investigate improving overall algorithm to handle this scenario more cleanly\n  event.relativeOverlapWidth = positionMap[event.id].widthOverride\n    ? (positionMap[event.id].widthOverride as number)\n    : event.relativeOverlapWidth;\n\n  // Finally, increase the position offset of all overlapping events that will\n  // be placed to the right of the current event.\n  overlappingEvents.forEach((overlappingEvent) => {\n    if (\n      !leftNeighbour ||\n      overlappingEvent.when.start_time < leftNeighbour.when.end_time\n    ) {\n      positionMap[overlappingEvent.id].offset += event.relativeOverlapWidth;\n      positionMap[overlappingEvent.id].leftNeighbour = event;\n    } else {\n      // If an event has a left neighbour, and an overlapping event that begins after the left neighbour ends,\n      // we identify it as an event that straddles two events, and could cause a staircase layout.\n      positionMap[overlappingEvent.id].widthOverride =\n        event.relativeOverlapOffset;\n    }\n  });\n}\n\nfunction calculateEventWidth(\n  event: Events.TimespanEvent,\n  overlappingEvents: Events.TimespanEvent[],\n): number {\n  const eventTimeMinutes = Math.ceil(\n    (event.when.end_time - event.when.start_time) /\n      (60 * EVENT_OVERLAP_GRANULARITY),\n  );\n\n  // Create an array of time slot \"buckets\" that will track the number of overlapping events in each time slot\n  const overlapArr = new Array(eventTimeMinutes).fill(1);\n\n  overlappingEvents.forEach((overlappingEvent) => {\n    // Find which time slot \"bucket\" the overlapping event starts and ends in\n    let startTime = 0;\n    if (event.when.start_time <= overlappingEvent.when.start_time) {\n      const localStartTime = Math.ceil(\n        (overlappingEvent.when.start_time - event.when.start_time) /\n          (60 * EVENT_OVERLAP_GRANULARITY),\n      );\n\n      startTime = Math.min(Math.max(0, localStartTime), overlapArr.length - 1);\n    }\n\n    let endTime = overlapArr.length - 1;\n    if (event.when.end_time >= overlappingEvent.when.end_time) {\n      const localEndTime = Math.ceil(\n        Math.abs(overlappingEvent.when.end_time - event.when.end_time) /\n          (60 * EVENT_OVERLAP_GRANULARITY),\n      );\n\n      endTime = Math.max(startTime, overlapArr.length - localEndTime - 1);\n    }\n\n    // Increment the values of the \"buckets\" contained in the overlapping event\n    for (let i = startTime; i <= endTime; i++) {\n      overlapArr[i]++;\n    }\n  });\n\n  // The event width is determined by the maximum number of overlaps at a given time slot\n  return 1 / Math.max(...overlapArr);\n}\n","// Would very much like for this to be a .ts file, but https://github.com/pyoner/svelte-typescript/issues/15\n\nfunction getDynamicStartTime(event: Events.Event) {\n  if (!(\"start_time\" in event.when && \"end_time\" in event.when)) {\n    return 0;\n  }\n\n  const start =\n    new Date(event.when.start_time * 1000).getTime() -\n    new Date(\n      new Date(event.when.start_time * 1000).setHours(0, 0, 0, 0),\n    ).getTime();\n  return start / 60000; // in minutes\n}\n\nfunction getDynamicEndTime(event: Events.Event) {\n  if (!(\"start_time\" in event.when && \"end_time\" in event.when)) {\n    return 0;\n  }\n\n  let start =\n    new Date(event.when.start_time * 1000).getTime() -\n    new Date(\n      new Date(event.when.start_time * 1000).setHours(0, 0, 0, 0),\n    ).getTime();\n\n  start = start / 60000; // in minutes\n  let runTime =\n    new Date(event.when.end_time * 1000).getTime() -\n    new Date(event.when.start_time * 1000).getTime();\n\n  runTime = runTime / 60000; // in minutes\n\n  return start + runTime;\n}\n\nexport { getDynamicEndTime, getDynamicStartTime };\n","<svelte:options tag=\"nylas-agenda\" immutable={true} />\n\n<script lang=\"ts\">\n  import { tick } from \"svelte\";\n  import { get_current_component, onMount } from \"svelte/internal\";\n  import { spring } from \"svelte/motion\";\n  import { CalendarStore, EventStore, ManifestStore } from \"@commons\";\n  import {\n    buildInternalProps,\n    getPropertyValue,\n    getEventDispatcher,\n  } from \"@commons/methods/component\";\n  import type { EventPosition } from \"./methods/position\";\n  import { populatePositionMap, updateEventPosition } from \"./methods/position\";\n  import { getDynamicEndTime, getDynamicStartTime } from \"./methods/time\";\n\n  // #region props\n  const INTERNAL_EVENT_PROPS = Object.freeze([\n    \"overlaps\",\n    \"relativeOverlapOffset\",\n    \"relativeOverlapWidth\",\n    \"relativeRunTime\",\n    \"relativeStartTime\",\n  ]);\n  let manifest: Partial<Nylas.AgendaProperties> = {};\n\n  export let id: string = \"\";\n  export let access_token: string = \"\";\n\n  export let allow_date_change: boolean;\n  export let allow_event_creation: boolean;\n  export let allowed_dates: Date[] | string = [];\n  export let auto_time_box: boolean;\n  export let events: Events.Event[] | null = null;\n  export let calendar_id: string = \"\";\n  export let calendar_ids: any = \"\";\n  export let click_action: (\n    event: MouseEvent | KeyboardEvent,\n    calendarEvent: Events.Event,\n  ) => any;\n  export let color_by: string;\n  export let condensed_view: boolean | string;\n  export let eagerly_fetch_events: boolean;\n  export let event_snap_interval: number;\n  export let event_created: (\n    event: Events.Event,\n    confirm: (event: Events.TimespanEvent) => void,\n    cancel: () => void,\n    updateEvent: (event: Events.TimespanEvent) => void,\n  ) => any;\n  export let header_type: \"full\" | \"day\" | \"none\";\n  export let hide_all_day_events: boolean;\n  export let hide_current_time: boolean;\n  export let hide_ticks: boolean;\n  export let prevent_zoom: boolean;\n  export let selected_date: Date | null = null;\n  export let show_no_events_message: boolean;\n  export let theme: string;\n\n  let internalProps: Partial<Nylas.AgendaProperties> = {};\n  let now = new Date().getTime();\n\n  onMount(async () => {\n    await tick();\n    clientHeight = agendaElement?.getBoundingClientRect().height;\n    manifest = ((await $ManifestStore[\n      JSON.stringify({ component_id: id, access_token })\n    ]) || {}) as Nylas.AgendaProperties;\n\n    setInterval(() => {\n      now = new Date().getTime();\n    }, 15000);\n  });\n\n  const dispatchEvent = getEventDispatcher(get_current_component());\n\n  $: dispatchEvent(\"manifestLoaded\", manifest);\n\n  // The reference to $$props is lost each time it gets updated, so we have to rebuild the proxy each time\n  // TODO - Find a way to improve this\n  $: internalProps = buildInternalProps($$props, manifest);\n\n  $: {\n    allow_date_change = getPropertyValue(\n      internalProps.allow_date_change,\n      allow_date_change,\n      false,\n    );\n    allow_event_creation = getPropertyValue(\n      internalProps.allow_event_creation,\n      allow_event_creation,\n      false,\n    );\n    auto_time_box = getPropertyValue(\n      internalProps.auto_time_box,\n      auto_time_box,\n      false,\n    );\n    calendar_ids = getPropertyValue(\n      internalProps.calendar_ids,\n      calendar_ids,\n      \"\",\n    );\n    color_by = getPropertyValue(internalProps.color_by, color_by, \"calendar\");\n    condensed_view = getPropertyValue(\n      internalProps.condensed_view,\n      condensed_view,\n      false,\n    );\n    header_type = getPropertyValue(\n      internalProps.header_type,\n      header_type,\n      \"full\",\n    );\n    hide_current_time = getPropertyValue(\n      internalProps.hide_current_time,\n      hide_current_time,\n      false,\n    );\n    hide_all_day_events = getPropertyValue(\n      internalProps.hide_all_day_events,\n      hide_all_day_events,\n      false,\n    );\n    prevent_zoom = getPropertyValue(\n      internalProps.prevent_zoom,\n      prevent_zoom,\n      false,\n    );\n    show_no_events_message = getPropertyValue(\n      internalProps.show_no_events_message,\n      show_no_events_message,\n      false,\n    );\n    eagerly_fetch_events = getPropertyValue(\n      internalProps.eagerly_fetch_events,\n      eagerly_fetch_events,\n      true,\n    );\n    event_snap_interval = getPropertyValue(\n      internalProps.event_snap_interval,\n      event_snap_interval,\n      15,\n    );\n    theme = getPropertyValue(internalProps.theme, theme, \"theme-1\");\n    hide_ticks = getPropertyValue(internalProps.hide_ticks, hide_ticks, false);\n  }\n\n  let themeUrl: string;\n  $: if (!!theme && (theme.startsWith(\".\") || theme.startsWith(\"http\"))) {\n    // If the theme is a file path or a URL\n    themeUrl = theme;\n  }\n\n  $: click_default = typeof click_action === \"function\" ? \"none\" : \"expand\";\n\n  // This is only configurable via the manifest\n  $: show_as_busy =\n    manifest && typeof manifest[\"show_as_busy\"] !== \"undefined\"\n      ? manifest[\"show_as_busy\"]\n      : false;\n\n  // #endregion props\n\n  // #region time constants\n  let selectedDate: Date;\n  $: selectedDate = (() => {\n    if (selected_date) {\n      const date = new Date(selected_date);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    } else if (allowedDates.length) {\n      return allowedDates[0];\n    } else {\n      const date = new Date();\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n  })();\n\n  function convertToUTC(date: Date): number {\n    return date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n  }\n\n  $: hideCurrentTime =\n    hide_current_time ||\n    new Date().toLocaleDateString() != selectedDate.toLocaleDateString();\n\n  $: allowedDates = (() => {\n    let dates: Date[] = [];\n\n    if (allowed_dates && typeof allowed_dates === \"string\") {\n      if (allowed_dates.includes(\",\")) {\n        dates = allowed_dates.split(\",\").map((date): Date => new Date(date));\n      } else {\n        dates = [new Date(allowed_dates)];\n      }\n\n      dates = dates.map((date: Date) => {\n        date.setHours(0, 0, 0, 0);\n        return date;\n      });\n    }\n\n    if (allowed_dates && typeof allowed_dates !== \"string\") {\n      dates = allowed_dates;\n    }\n\n    return dates;\n  })();\n\n  // Minutes of the day. Used to display the top and bottom of an agenda.\n  export let start_minute = 0;\n  export let end_minute = 1440;\n\n  // get events from story by unique ID with Calendar and Date\n\n  $: startMinute =\n    auto_time_box && timespanEvents?.length\n      ? getDynamicStartTime(timespanEvents[0])\n      : start_minute;\n\n  $: endMinute =\n    auto_time_box && timespanEvents?.length\n      ? getDynamicEndTime(timespanEvents[timespanEvents.length - 1])\n      : end_minute;\n\n  $: startTime = (() => {\n    let date = new Date();\n    date.setHours(0, startMinute, 0, 0);\n    return date;\n  })();\n\n  $: endTime = (() => {\n    let date = new Date();\n    date.setHours(0, endMinute, 0, 0);\n    return date;\n  })();\n\n  let timeSpan: number;\n  $: timeSpan = Math.floor(endMinute - startMinute);\n\n  let startOfDay: number;\n  let endOfDay: number;\n\n  $: startOfDay =\n    convertToUTC(new Date(new Date(selectedDate).setHours(0, 0, 0, 0))) / 1000;\n  $: endOfDay =\n    convertToUTC(new Date(new Date(selectedDate).setHours(24, 0, 0, 0))) / 1000;\n\n  // #endregion time constants\n\n  // #region Data Flow\n\n  // Accept either comma-separated string, or array.\n  $: calendarIDs = (() => {\n    let IDList = calendar_ids;\n    if (typeof calendar_ids === \"string\" && calendar_ids.length) {\n      IDList = IDList.split(\",\").map((id: string) => id.trim());\n    } else if (calendar_id) {\n      IDList = [calendar_id];\n    }\n    return IDList;\n  })();\n\n  let query: Events.EventQuery;\n  $: {\n    query = {\n      component_id: id,\n      access_token: access_token,\n      calendarIDs: calendarIDs,\n      starts_after: startOfDay,\n      ends_before: endOfDay,\n    };\n  }\n\n  // Sibling Queries: eagerly fetch the events on the previous and next days,\n  // so when the user clicks them, the loading will seem instantaneous.\n  let siblingQueries: [Events.EventQuery, Events.EventQuery] | [] = [];\n  $: if (allow_date_change && eagerly_fetch_events && query) {\n    let previousDate;\n    let nextDate;\n    if (allowedDates.length) {\n      const dateSpot = allowedDates.findIndex(\n        (date: Date) => date.toDateString() === selectedDate.toDateString(),\n      );\n      previousDate = allowedDates[dateSpot - 1] || selectedDate;\n      nextDate = allowedDates[dateSpot + 1] || selectedDate;\n    } else {\n      previousDate = new Date(new Date().setDate(selectedDate.getDate() - 1));\n      nextDate = new Date(new Date().setDate(selectedDate.getDate() + 1));\n    }\n\n    siblingQueries = [\n      {\n        component_id: id,\n        access_token: access_token,\n        calendarIDs: calendarIDs,\n        starts_after:\n          convertToUTC(new Date(new Date(previousDate).setHours(0, 0, 0, 0))) /\n          1000,\n        ends_before:\n          convertToUTC(new Date(new Date(previousDate).setHours(24, 0, 0, 0))) /\n          1000,\n      },\n      {\n        component_id: id,\n        access_token: access_token,\n        calendarIDs: calendarIDs,\n        starts_after:\n          convertToUTC(new Date(new Date(nextDate).setHours(0, 0, 0, 0))) /\n          1000,\n        ends_before:\n          convertToUTC(new Date(new Date(nextDate).setHours(24, 0, 0, 0))) /\n          1000,\n      },\n    ];\n  }\n\n  let queryKey: string;\n  $: queryKey = JSON.stringify(query);\n\n  let calendars: Events.Calendar[] = [];\n  $: (async () => {\n    if (id && calendarIDs.length) {\n      const calendarQuery: Events.CalendarQuery = {\n        access_token,\n        component_id: id,\n        calendarIDs,\n      };\n      calendars = await CalendarStore.getCalendars(calendarQuery);\n    }\n  })();\n\n  // Try getting events from 3 sources: first, directly passed in, then, from our store; finally, by way of a fetch\n  let calendarEvents: Events.Event[] = [];\n  $: {\n    (async () => {\n      if (events) {\n        calendarEvents = events as Events.Event[];\n      } else {\n        calendarEvents = (await EventStore.getEvents(query)) || [];\n        if (siblingQueries.length) {\n          siblingQueries.forEach((siblingQuery) =>\n            EventStore.getEvents(siblingQuery),\n          );\n        }\n      }\n    })();\n  }\n\n  $: allDayEvents = calendarEvents\n    ?.filter((event): event is Events.DateEvent => \"date\" in event.when)\n    ?.sort((a, b) => (a.title || \"\").localeCompare(b.title || \"\"));\n\n  $: timespanEvents = calendarEvents\n    ?.filter(\n      (event): event is Events.TimespanEvent => \"start_time\" in event.when,\n    )\n    ?.map((event: Events.TimespanEvent) => {\n      let attendee = calendars.find((cal) => cal.id === event.calendar_id);\n      event.attendeeStatus = event.participants?.find(\n        (p) => p.email === attendee?.name,\n      )?.status;\n      return event;\n    })\n    .sort((a, b) => a.when.start_time - b.when.start_time);\n\n  // Only fired if no events prop was passed in\n  $: if (!events) {\n    dispatchEvent(\"eventsLoaded\", calendarEvents);\n  }\n\n  // Don't let events be smaller than 30px tall; if they would be, overflow the calendar and make it scrollable.\n  const minEventHeight = 30;\n  let overflowing = false;\n  $: overflowing = hydratedEvents.length * minEventHeight > clientHeight;\n  $: {\n    if (condensed && overflowing) {\n      hydratedEvents.forEach((event, iter) => {\n        event.relativeStartTime = minEventHeightPercent * iter;\n        event.relativeRunTime = minEventHeightPercent;\n      });\n    }\n  }\n  $: minEventHeightPercent = minEventHeight / clientHeight;\n\n  let eventSource: Events.Event[];\n  $: eventSource =\n    Array.isArray(calendarEvents) && calendarEvents.length > 0\n      ? calendarEvents\n      : events || [];\n  // calendarEvents, but with presentational changes made to content.\n  // (figure out how far down the page an event needs to be positioned, render links as links, etc.)\n  // Goal timing: 0.02ms per event or less\n  let hydratedEvents: Events.Event[] = [];\n  $: {\n    if (events || (timespanEvents && calendars?.length)) {\n      hydratedEvents = eventSource\n        .filter(\n          (event: Events.Event): event is Events.TimespanEvent =>\n            event.status !== \"cancelled\" && \"start_time\" in event.when,\n        )\n        .map((event: Events.TimespanEvent, iter) => {\n          if (condensed) {\n            event.relativeStartTime =\n              (100 / timespanEvents.length / 100) * iter;\n            event.relativeRunTime = 100 / timespanEvents.length / 100;\n            return event;\n          }\n\n          let minutesInVisibleDay =\n            new Date(event.when.start_time * 1000).getTime() -\n            new Date(\n              new Date(event.when.start_time * 1000).setHours(\n                0,\n                startMinute,\n                0,\n                0,\n              ),\n            ).getTime();\n          minutesInVisibleDay = minutesInVisibleDay / 60000; // in minutes\n\n          let runTime =\n            new Date(event.when.end_time * 1000).getTime() -\n            new Date(event.when.start_time * 1000).getTime();\n          runTime = runTime / 60000; // in minutes\n\n          event.relativeStartTime = minutesInVisibleDay / timeSpan;\n          event.relativeRunTime = runTime / timeSpan;\n\n          // location as meeting? let's fix that!\n          if (event.location?.startsWith(\"http\")) {\n            event.locationString = `Link: ${new URL(event.location).hostname}`;\n          }\n          return event;\n        });\n\n      const hydratedTimespans: Events.TimespanEvent[] = hydratedEvents.filter(\n        (event): event is Events.TimespanEvent =>\n          \"start_time\" in event.when && \"end_time\" in event.when,\n      );\n\n      if (!condensed) {\n        // Event Overlap detection and positioning\n        const positionMap: Record<string, EventPosition> = {};\n        populatePositionMap(hydratedTimespans, positionMap);\n\n        hydratedTimespans\n          // Ensure longer events are processed first, so they can be placed as far left as possible\n          .sort((a, b) =>\n            a.when.end_time - a.when.start_time <\n            b.when.end_time - b.when.start_time\n              ? 1\n              : -1,\n          )\n          .forEach((event) => updateEventPosition(event, positionMap));\n      } else {\n        hydratedTimespans.forEach((event) => {\n          event.relativeOverlapWidth = 1;\n          event.relativeOverlapOffset = 0;\n        });\n      }\n    } else if ($EventStore[queryKey]) {\n      // if there's a store entry but it's empty, it means you've fetched and there's nothing.\n      hydratedEvents = [];\n    }\n  }\n\n  // #endregion Data Flow\n\n  // #region date selection\n\n  let dateIsFirstAllowed: boolean;\n  $: dateIsFirstAllowed = !!(\n    allowedDates.length &&\n    allowedDates.findIndex(\n      (date: Date) => date.toDateString() === selectedDate.toDateString(),\n    ) === 0\n  );\n\n  let dateIsLastAllowed: boolean;\n  $: dateIsLastAllowed = !!(\n    allowedDates.length &&\n    allowedDates.findIndex(\n      (date: Date) => date.toDateString() === selectedDate.toDateString(),\n    ) ===\n      allowedDates.length - 1\n  );\n\n  const goToNextDate = () => {\n    if (isCreatingNewEvent) {\n      return;\n    }\n\n    if (allowedDates.length) {\n      const dateSpot = allowedDates.findIndex(\n        (date: Date) => date.toDateString() === selectedDate.toDateString(),\n      );\n      selectedDate = allowedDates[dateSpot + 1] || selectedDate;\n    } else {\n      selectedDate = new Date(new Date().setDate(selectedDate.getDate() + 1));\n    }\n    dispatchEvent(\n      \"dateChange\",\n      new Date(new Date(selectedDate).setHours(0, 0, 0, 0)),\n    );\n  };\n  const goToPreviousDate = () => {\n    if (isCreatingNewEvent) {\n      return;\n    }\n\n    if (allowedDates.length) {\n      const dateSpot = allowedDates.findIndex(\n        (date: Date) => date.toDateString() === selectedDate.toDateString(),\n      );\n      selectedDate = allowedDates[dateSpot - 1] || selectedDate;\n    } else {\n      selectedDate = new Date(new Date().setDate(selectedDate.getDate() - 1));\n    }\n    dispatchEvent(\n      \"dateChange\",\n      new Date(new Date(selectedDate).setHours(0, 0, 0, 0)),\n    );\n  };\n  // #endregion date selection\n\n  // #region position and zoom\n  $: ticks = [...Array(24).keys()].map((key) => {\n    const date = new Date();\n    date.setHours(key, 0, 0, 0);\n\n    let minutesInVisibleDay = endTime.getTime() - startTime.getTime();\n    minutesInVisibleDay = minutesInVisibleDay / 60000; // in minutes\n\n    return {\n      key,\n      formatted: date.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        hour12: true,\n      }), // \"9 AM\"\n      timeString: date.toISOString(),\n      timeStamp: date.getTime(),\n      date,\n      // relativeTickPosition: a 0-1 representation of how far along the y-axis each tick should live.\n      relativeTickPosition:\n        (date.getTime() - startTime.getTime()) / 60000 / minutesInVisibleDay,\n    };\n  });\n\n  $: currentTimePosition = () => {\n    const date = new Date(now); // seems redundant, right? new Date() does the same thing. But, the inclusion of \"now\" means that changes to it are observed -- and we change every setInterval loop.\n\n    const minutesInDayBeforeNow =\n      (date.getTime() - startTime.getTime()) / 60000;\n\n    const minutesInVisibleDay =\n      (endTime.getTime() - startTime.getTime()) / 60000;\n\n    return (minutesInDayBeforeNow / minutesInVisibleDay) * 100;\n  };\n\n  let agendaElement: Element;\n  let clientHeight: number;\n\n  $: condensed = condensed_view || (clientHeight && clientHeight < 500);\n\n  let scrolling = false;\n\n  const handleWheel = (event: WheelEvent) => {\n    if (expandedEventId) {\n      return;\n    }\n\n    scrolling = true;\n    setTimeout(() => {\n      scrolling = false;\n    }, 500);\n    event.preventDefault();\n    const canvas = agendaElement.getBoundingClientRect();\n    const mouseYPosition = event.clientY - canvas.top;\n    let velocity = Math.abs(event.deltaY) / 10;\n\n    // ctrlKey = Pinch-to-zoom\n    if (event.ctrlKey) {\n      event.preventDefault();\n      velocity *= 20;\n    }\n\n    const direction = event.deltaY >= 0 ? \"out\" : \"in\";\n\n    // zoom TO your mouse position, not just the midpoint\n    // creates a tuple representing how far downt he element you are;\n    // so 65% down the element would be [0.65, 0.35]\n    const ratio = [\n      mouseYPosition / canvas.height,\n      (canvas.height - mouseYPosition) / canvas.height,\n    ];\n\n    if (direction === \"out\") {\n      if (endMinute <= 1440 && endMinute + velocity <= 1440) {\n        endMinute += velocity;\n      } else {\n        endMinute = 1440;\n      }\n      if (startMinute >= 0 && startMinute - velocity >= 0) {\n        startMinute -= velocity;\n      } else {\n        startMinute = 0;\n      }\n    }\n\n    if (direction === \"in\") {\n      // dont enter the upside-down, you'll encounter the demogorgon\n      if (endMinute > startMinute + 60) {\n        // max-zoom: 60 minutes\n        startMinute += velocity * ratio[0];\n        endMinute -= velocity * ratio[1];\n      }\n    }\n  };\n\n  // #endregion position and zoom\n\n  // #region event handlers\n  let expandedEventId: string = \"\";\n  let lastStartMinute: number;\n  let lastEndMinute: number;\n\n  function eventClicked(\n    event: MouseEvent | KeyboardEvent,\n    calendarEvent: Events.Event,\n  ) {\n    if (typeof click_action === \"function\") {\n      const clonedEvent = JSON.parse(JSON.stringify(calendarEvent));\n      for (const internalProp of INTERNAL_EVENT_PROPS) {\n        delete clonedEvent[internalProp];\n      }\n      click_action(event, clonedEvent);\n    }\n\n    if (click_default === \"expand\" && \"start_time\" in calendarEvent.when) {\n      if (calendarEvent.id !== expandedEventId) {\n        lastStartMinute = startMinute;\n        lastEndMinute = endMinute;\n        startMinute = getDynamicStartTime(calendarEvent);\n        endMinute = getDynamicEndTime(calendarEvent);\n        expandedEventId = calendarEvent.id;\n      } else {\n        expandedEventId = \"\";\n        startMinute = lastStartMinute;\n        endMinute = lastEndMinute;\n      }\n    }\n  }\n\n  let dragState = { held: false, x: 0, y: 0 };\n  let stiffness = 0.2;\n  let damping = 0.7;\n  const dampener = spring(\n    { x: 0 },\n    {\n      stiffness,\n      damping,\n    },\n  );\n  $: if (dragState.x === 0) dampener.set({ x: 0 });\n  const MIN_DRAG_DISTANCE = 50;\n  const CLICK_ENABLED_AFTER = 100;\n\n  function headerMouseDown(event: PointerEvent) {\n    dragState = { held: true, x: event.clientX, y: event.clientY };\n    dampener.stiffness = 1;\n    dampener.damping = 1;\n  }\n\n  function headerMouseMove(event: PointerEvent) {\n    if (dragState.held) {\n      dampener.update(() => ({\n        x:\n          Math.sign(event.clientX - dragState.x) *\n          Math.sqrt(Math.abs(event.clientX - dragState.x)),\n      }));\n    }\n  }\n\n  function headerMouseUp(event: PointerEvent) {\n    if (dragState.held) {\n      let distance = event.clientX - dragState.x;\n      if (Math.abs(distance) > MIN_DRAG_DISTANCE && allow_date_change) {\n        // you've been moving, not clicking.\n        if (distance > 0) {\n          goToPreviousDate();\n        } else if (distance < 0) {\n          goToNextDate();\n        }\n        setTimeout(() => {\n          dragState = { held: false, x: 0, y: 0 };\n        }, CLICK_ENABLED_AFTER);\n      } else {\n        dragState = { held: false, x: 0, y: 0 };\n      }\n    }\n    dampener.stiffness = stiffness;\n    dampener.damping = damping;\n    dampener.set({ x: 0 });\n  }\n\n  function snapStartTimeToTimespanInterval(yPosition: number) {\n    // Calculate start time & adjust for current zoom\n    const relativeStartTime =\n      Math.abs(yPosition - agendaElement.getBoundingClientRect().y) /\n      agendaElement.getBoundingClientRect().height;\n    const zoomAdjustedStartTime = timeSpan * relativeStartTime + startMinute;\n\n    // Round to nearest snap interval & convert back to relative position\n    const snappedStartTime =\n      Math.round(zoomAdjustedStartTime / event_snap_interval) *\n      event_snap_interval;\n    return (snappedStartTime - startMinute) / timeSpan;\n  }\n\n  function snapRunTimeToTimespanInterval(yPosition: number) {\n    // Calculate start time & adjust for current zoom\n    const relativeRunTime =\n      Math.abs(yPosition - dragState.y) /\n      agendaElement.getBoundingClientRect().height;\n    const zoomAdjustedRunTime = timeSpan * relativeRunTime;\n\n    // Round to nearest snap interval & convert back to relative position\n    const snappedRunTime =\n      Math.round(zoomAdjustedRunTime / event_snap_interval) *\n      event_snap_interval;\n    return snappedRunTime / timeSpan;\n  }\n\n  let newEvent: Events.TimespanEvent | null;\n  let isCreatingNewEvent = false;\n  function agendaMouseDown(event: PointerEvent) {\n    if (\n      allow_event_creation &&\n      !isCreatingNewEvent &&\n      Array.isArray(eventSource)\n    ) {\n      dragState = { held: true, x: event.clientX, y: event.clientY };\n      newEvent = <any>{\n        id: `${eventSource.length}`,\n        title: \"New Event\",\n        relativeStartTime: snapStartTimeToTimespanInterval(event.clientY),\n        relativeRunTime: 0,\n        relativeOverlapWidth: 1,\n        when: <any>{},\n        isNewEvent: true,\n      };\n      isCreatingNewEvent = true;\n    }\n  }\n\n  let negativeDragStartPosition: number | null = null;\n  function agendaMouseMove(event: PointerEvent) {\n    if (\n      allow_event_creation &&\n      dragState.held &&\n      !!newEvent &&\n      event.clientY > agendaElement.getBoundingClientRect().y\n    ) {\n      if (dragState.y <= event.clientY) {\n        // If the drag is downward, update the event's runtime\n        if (negativeDragStartPosition !== null) {\n          newEvent.relativeStartTime = negativeDragStartPosition;\n          negativeDragStartPosition = null;\n        }\n        newEvent.relativeRunTime = snapRunTimeToTimespanInterval(event.clientY);\n      } else {\n        // If the drag is upward, update both the event's start time and runtime\n        if (negativeDragStartPosition === null) {\n          negativeDragStartPosition = newEvent.relativeStartTime;\n        }\n        newEvent.relativeStartTime = snapStartTimeToTimespanInterval(\n          event.clientY,\n        );\n        newEvent.relativeRunTime = Math.abs(\n          negativeDragStartPosition - newEvent.relativeStartTime,\n        );\n      }\n      // Ensure event height is updated in the DOM\n      newEvent = { ...newEvent };\n    }\n  }\n\n  function agendaMouseUp() {\n    if (\n      allow_event_creation &&\n      dragState.held &&\n      newEvent &&\n      newEvent.relativeRunTime > 0\n    ) {\n      const zoomAdjustedStartTime =\n          timeSpan * newEvent.relativeStartTime + startMinute,\n        zoomAdjustedRunTime = timeSpan * newEvent.relativeRunTime;\n\n      const currentDate = new Date(selectedDate);\n      newEvent.when.start_time = Math.floor(\n        new Date(\n          currentDate.setHours(0, zoomAdjustedStartTime, 0, 0),\n        ).getTime() / 1000,\n      );\n      newEvent.when.end_time = Math.floor(\n        new Date(\n          currentDate.setHours(\n            0,\n            zoomAdjustedStartTime + zoomAdjustedRunTime,\n            0,\n            0,\n          ),\n        ).getTime() / 1000,\n      );\n      eventSource = [...eventSource, newEvent];\n\n      if (\n        typeof event_created === \"function\" &&\n        Array.isArray(calendarIDs) &&\n        calendarIDs.length > 0\n      ) {\n        newEvent.calendar_id = calendarIDs[0];\n        event_created(\n          newEvent as Events.TimespanEvent,\n          saveEvent,\n          cancelEvent,\n          updateEvent,\n        );\n      } else {\n        isCreatingNewEvent = false;\n      }\n    } else {\n      isCreatingNewEvent = false;\n    }\n    newEvent = null;\n    negativeDragStartPosition = null;\n    dragState = { held: false, x: 0, y: 0 };\n  }\n\n  function updateEvent(event: Events.TimespanEvent) {\n    if (typeof event.when.start_time === \"object\") {\n      event.when.start_time = Math.floor(\n        (<Date>event.when.start_time).getTime() / 1000,\n      );\n    } else {\n      event.when.start_time = Math.floor(event.when.start_time / 1000);\n    }\n\n    if (typeof event.when.end_time === \"object\") {\n      event.when.end_time = Math.floor(\n        (<Date>event.when.end_time).getTime() / 1000,\n      );\n    } else {\n      event.when.end_time = Math.floor(event.when.end_time / 1000);\n    }\n\n    let minutesInVisibleDay =\n      new Date(event.when.start_time * 1000).getTime() -\n      new Date(\n        new Date(event.when.start_time * 1000).setHours(0, startMinute, 0, 0),\n      ).getTime();\n    minutesInVisibleDay = minutesInVisibleDay / 60000; // in minutes\n\n    let runTime =\n      new Date(event.when.end_time * 1000).getTime() -\n      new Date(event.when.start_time * 1000).getTime();\n    runTime = runTime / 60000; // in minutes\n\n    event.relativeStartTime = minutesInVisibleDay / timeSpan;\n    event.relativeRunTime = runTime / timeSpan;\n\n    eventSource[eventSource.length - 1] = event;\n    eventSource = [...eventSource];\n  }\n\n  function saveEvent(event: Events.TimespanEvent) {\n    if (typeof event !== \"object\") {\n      console.warn(\"Invalid event object provided.\");\n      return;\n    }\n    if (typeof event.when.start_time === \"object\") {\n      event.when.start_time = Math.floor(\n        (<Date>event.when.start_time).getTime() / 1000,\n      );\n    } else {\n      event.when.start_time = Math.floor(event.when.start_time / 1000);\n    }\n\n    if (typeof event.when.end_time === \"object\") {\n      event.when.end_time = Math.floor(\n        (<Date>event.when.end_time).getTime() / 1000,\n      );\n    } else {\n      event.when.end_time = Math.floor(event.when.end_time / 1000);\n    }\n\n    EventStore.createEvent(event, query);\n    eventSource[eventSource.length - 1].isNewEvent = false;\n    isCreatingNewEvent = false;\n  }\n\n  function cancelEvent() {\n    eventSource.pop();\n    eventSource = [...eventSource];\n    isCreatingNewEvent = false;\n  }\n\n  // #endregion event handlers\n</script>\n\n<style lang=\"scss\">\n  @use 'sass:list';\n  @import \"../../theming/reset.scss\";\n  @import \"../../theming/variables.scss\";\n\n  main {\n    --mainTextAndDeclinedEvents: #000000;\n    --calendarEventText: #ffffff;\n    --linesAndIcons: #d5d5d5;\n    --monthsOnMobileDropdown: #f1f1f1;\n    --primaryAndMainCalendar: #002db4;\n    --secondaryCalendar: #315df2;\n    --thirdCalendar: #078351;\n    --timeLine: #36d2ac;\n    --declinedEvent: #636671;\n    --alertWarningDeclined: #36d2ac;\n    --headerBackground: #ffffff;\n    --emptyEventBackground: #eeeeee;\n    @import \"./styles/agenda-themes.scss\";\n\n    text-align: center;\n    height: 100%;\n    margin: 0 auto;\n    font-family: Arial, Helvetica, sans-serif;\n    display: grid;\n    grid-template-rows: 80px auto 1fr;\n    grid-template-columns: 1fr;\n    grid-column-gap: 5px;\n    overflow: hidden;\n    line-height: 100%;\n    transition: 0.2s;\n    &.headless {\n      grid-template-rows: 1fr;\n    }\n  }\n\n  @import \"./themes/theme-1\";\n  @import \"./themes/theme-2\";\n  @import \"./themes/theme-3\";\n  @import \"./themes/theme-4\";\n  @import \"./themes/theme-5\";\n\n  header {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n    grid-column: 1/3;\n    color: var(--mainTextAndDeclinedEvents);\n    background: var(--headerBackground);\n    z-index: 1;\n    padding-left: 10px;\n\n    button {\n      padding: 0rem 0.5rem;\n      background: transparent;\n\n      &:first-of-type {\n        padding-left: 0;\n      }\n\n      svg path {\n        fill: var(--linesAndIcons);\n        transition: 0.2s;\n      }\n    }\n\n    .month,\n    .day {\n      display: flex;\n      flex-direction: row;\n      gap: 15px;\n      align-items: center;\n    }\n\n    .month {\n      h1 {\n        font-size: 26px;\n        font-weight: bold;\n        margin: 0;\n        span {\n          font-weight: lighter;\n        }\n      }\n    }\n\n    .day {\n      white-space: nowrap;\n      display: grid;\n\n      &.allow_date_change {\n        grid-template-columns: 1fr auto 1fr;\n        width: 100%;\n      }\n      button {\n        cursor: pointer;\n        &.prev {\n          text-align: right;\n        }\n        &.next {\n          text-align: left;\n        }\n\n        &:hover,\n        &:focus {\n          svg path {\n            fill: hsl(var(--linesAndIcons), 50%);\n          }\n        }\n      }\n      h2 {\n        font-size: 20px;\n        margin: 0;\n        font-weight: lighter;\n        span {\n          background-color: var(--primaryAndMainCalendar);\n          color: var(--calendarEventText);\n          border-radius: 20px;\n          display: inline-block;\n          font-weight: bold;\n          padding: 4px;\n          display: inline-block;\n          width: 22px;\n          height: 22px;\n          font-weight: 300;\n          font-size: 14px;\n          text-align: center;\n          line-height: 22px;\n        }\n      }\n    }\n  }\n\n  h2 {\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 12px;\n    margin-bottom: 0px;\n    font-weight: 600;\n  }\n\n  .all-day {\n    display: grid;\n    grid-column: 1/3;\n    margin-bottom: 1rem;\n    max-height: 20vh;\n    overflow-y: scroll;\n\n    .events {\n      gap: 0;\n      .event {\n        height: 40px;\n        position: relative;\n        width: calc(100% - 4px);\n      }\n    }\n  }\n\n  .timespan {\n    display: grid;\n    grid-column: 1/3;\n    grid-template-columns: 40px 1fr;\n    overflow: hidden;\n    line-height: 100%;\n\n    &.hide-ticks {\n      grid-template-columns: 0px 1fr;\n      grid-column-gap: 0;\n\n      .ticks {\n        visibility: hidden;\n      }\n    }\n  }\n\n  .events {\n    display: grid;\n    gap: 1rem;\n    position: relative;\n    min-width: 100px;\n    border-left: 1px solid var(--linesAndIcons);\n    border-right: 1px solid var(--linesAndIcons);\n\n    &.overflowing {\n      overflow-y: auto;\n    }\n\n    &.scrolling .event,\n    &.scrolling .tick {\n      transition: 0s;\n    }\n\n    .no-events {\n      background: #eee;\n      padding: 1rem;\n    }\n\n    .event {\n      position: absolute;\n      overflow: hidden;\n      opacity: 1;\n      background: var(--primaryAndMainCalendar);\n      border-radius: 4px;\n      box-sizing: border-box;\n      color: var(--calendarEventText);\n      cursor: pointer;\n      text-align: left;\n      font-size: 0.9rem;\n      letter-spacing: 0.01rem;\n      transition: 0.5s;\n      margin: 2px;\n      -webkit-font-smoothing: antialiased;\n\n      &.expanded {\n        top: 0 !important;\n        left: 0 !important;\n        width: calc(100% - 4px) !important; // factors in margin spacing\n        height: calc(100% - 4px) !important;\n        overflow-y: auto;\n        z-index: 1;\n      }\n\n      &.new-event {\n        transition: none;\n        animation-delay: 0s !important;\n        animation-duration: 0s !important;\n      }\n\n      &.status-maybe {\n        background-color: var(--emptyEventBackground) !important;\n        border-left-width: 7px;\n        color: var(--secondaryCalendar) !important;\n\n        // diagonal stripes\n        background-image: linear-gradient(\n          45deg,\n          transparent,\n          transparent 40%,\n          rgba(0, 0, 0, 0.2) 40%,\n          rgba(0, 0, 0, 0.2) 50%,\n          transparent 50%,\n          transparent 90%,\n          rgba(0, 0, 0, 0.2) 90%,\n          rgba(0, 0, 0, 0.2)\n        );\n        background-size: 12px 12px;\n      }\n\n      &.status-noreply {\n        background-color: var(--emptyEventBackground) !important;\n        color: var(--secondaryCalendar) !important;\n        a {\n          color: var(--secondaryCalendar) !important;\n        }\n      }\n\n      &.status-no {\n        > .inner > h2 {\n          text-decoration: line-through;\n        }\n\n        border-color: var(--alertWarningDeclined);\n        color: var(--alertWarningDeclined);\n        background-color: var(--emptyEventBackground) !important;\n\n        a {\n          color: var(--secondaryCalendar) !important;\n        }\n      }\n\n      @for $i from 1 through 50 {\n        &:nth-child(#{$i}) {\n          animation-name: eventsIn;\n          animation-duration: 0.5s;\n          animation-delay: 0.1s + (0.05 * $i);\n          animation-fill-mode: both;\n        }\n      }\n\n      a {\n        color: white;\n        text-decoration: underline;\n      }\n\n      .inner {\n        padding: 5px 5px 8px;\n        &.tiny-event {\n          padding-top: 0;\n          h2,\n          span {\n            font-size: 70%;\n          }\n        }\n        span.time,\n        p {\n          font-size: 12px;\n        }\n      }\n    }\n\n    .hour-ticks {\n      height: 100%;\n      width: 100%;\n      position: relative;\n      span {\n        position: absolute;\n        height: 1px;\n        width: 100%;\n        border-top: 1px solid var(--linesAndIcons);\n        left: 0;\n      }\n    }\n  }\n\n  .ticks {\n    pointer-events: none;\n    height: 100%;\n    color: var(--mainTextAndDeclinedEvents);\n    font-size: 12px;\n    position: relative;\n    overflow: hidden;\n    .tick {\n      position: absolute;\n      width: 100%;\n      text-align: right;\n      display: block;\n      white-space: nowrap;\n      font-size: 11px;\n      opacity: 0.5;\n    }\n  }\n\n  .now {\n    position: absolute;\n    height: 4px;\n    width: 100%;\n    background-color: var(--timeLine);\n\n    svg {\n      position: absolute;\n      left: -39px;\n      top: -6px;\n      height: 16px;\n      width: 39px;\n\n      path {\n        fill: var(--timeLine);\n      }\n    }\n  }\n\n  .condensed {\n    .events {\n      grid-auto-rows: min-content;\n      grid-column: 1/3;\n      gap: 5px;\n      .event {\n        transition: 0.5s;\n        .inner {\n          display: grid;\n          grid-template-columns: min-content 1fr;\n          gap: 1rem;\n          & > h2 {\n            grid-column: 2;\n            grid-row: 1;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n          }\n          & > span.time {\n            grid-column: 1;\n            grid-row: 1;\n            white-space: nowrap;\n          }\n          & > p,\n          & > .location {\n            grid-column: 1 / -1;\n          }\n        }\n        h2 {\n          float: left;\n        }\n        span {\n          float: left;\n        }\n        p {\n          clear: both;\n        }\n      }\n    }\n    .ticks,\n    .now {\n      display: none;\n    }\n  }\n\n  @media #{$desktop} {\n    main {\n      max-width: none;\n    }\n  }\n\n  @keyframes eventsIn {\n    0% {\n      transform: translate(0, 30px);\n      opacity: 0;\n    }\n    50% {\n      opacity: 1;\n    }\n    100% {\n      transform: translate(0, 0);\n    }\n  }\n</style>\n\n<nylas-error {id} />\n\n{#if themeUrl}\n  <link rel=\"stylesheet\" href={themeUrl} />\n{/if}\n\n<main\n  class:headless={header_type === \"none\"}\n  data-cy=\"nylas-agenda\"\n  class={!!themeUrl ? \"custom\" : theme}\n>\n  {#await hydratedEvents}\n    (loading events)\n  {:then events}\n    {#if header_type !== \"none\"}\n      <header\n        on:pointerdown={headerMouseDown}\n        on:pointermove={headerMouseMove}\n        on:pointerup={headerMouseUp}\n        on:mouseleave={headerMouseUp}\n      >\n        {#if header_type === \"full\"}\n          <div class=\"month\">\n            <h1>\n              {selectedDate.toLocaleString(\"default\", { month: \"long\" })}\n              <span class=\"year\"\n                >{selectedDate.toLocaleString(\"default\", {\n                  year: \"numeric\",\n                })}</span\n              >\n            </h1>\n          </div>\n        {/if}\n        <div class=\"day\" class:allow_date_change>\n          {#if allow_date_change}\n            <button\n              disabled={dateIsFirstAllowed}\n              on:click={goToPreviousDate}\n              class=\"prev change-date\"\n            >\n              <svg\n                width=\"14\"\n                height=\"23\"\n                viewBox=\"0 0 14 23\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M0.371272 12.413L10.6278 22.4264C11.1225 22.9093 11.9245 22.9093 12.4191 22.4264L13.6153 21.2585C14.1092 20.7764 14.1101 19.995 13.6175 19.5117L5.48895 11.5385L13.6175 3.56541C14.1101 3.08216 14.1092 2.30079 13.6153 1.81868L12.4191 0.650778C11.9244 0.167839 11.1224 0.167839 10.6278 0.650778L0.371272 10.6641C-0.123338 11.1471 -0.123338 11.93 0.371272 12.413Z\"\n                />\n              </svg>\n            </button>\n          {/if}\n          <h2>\n            {selectedDate.toLocaleString(\"default\", {\n              weekday: condensed ? \"short\" : \"long\",\n            })}\n            <span class=\"date\"\n              >{selectedDate.toLocaleString(\"default\", {\n                day: \"numeric\",\n              })}\n            </span>\n          </h2>\n          {#if allow_date_change}\n            <button\n              disabled={dateIsLastAllowed}\n              on:click={goToNextDate}\n              class=\"next change-date\"\n            >\n              <svg\n                width=\"14\"\n                height=\"23\"\n                viewBox=\"0 0 14 23\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M13.6153 10.6642L3.35873 0.650778C2.86407 0.16784 2.0621 0.16784 1.56749 0.650778L0.371229 1.81868C-0.12259 2.30079 -0.123539 3.08216 0.369118 3.56541L8.49763 11.5386L0.369118 19.5117C-0.123539 19.995 -0.12259 20.7764 0.371229 21.2585L1.56749 22.4264C2.06215 22.9093 2.86412 22.9093 3.35873 22.4264L13.6153 12.413C14.1099 11.9301 14.1099 11.1471 13.6153 10.6642Z\"\n                />\n              </svg>\n            </button>\n          {/if}\n        </div>\n      </header>\n    {/if}\n\n    <div class=\"all-day\">\n      {#if !hide_all_day_events}\n        <ul class=\"events {theme}\">\n          {#if Array.isArray(allDayEvents)}\n            {#each allDayEvents as event}\n              <li\n                tabindex=\"0\"\n                class=\"event status-{event.attendeeStatus}\"\n                data-calendar-id={calendarIDs.indexOf(event.calendar_id) + 1}\n                on:click={(ev) => eventClicked(ev, event)}\n                on:keyup={(ev) => {\n                  if (ev.key === \"Enter\") {\n                    eventClicked(ev, event);\n                  }\n                }}\n              >\n                <div class=\"inner\">\n                  {#if !show_as_busy}\n                    <h2>{event.title}</h2>\n                  {:else}\n                    <h2>Busy</h2>\n                  {/if}\n                  {#if !show_as_busy}\n                    {#if event.location}\n                      <span class=\"location\">\n                        {#if event.locationString}\n                          <a href={event.location} target=\"_blank\">\n                            {event.locationString}\n                          </a>\n                        {:else}{event.location}{/if}\n                      </span>\n                    {/if}\n                    <p>\n                      {@html event.description || \"\"}\n                    </p>\n                  {/if}\n                </div>\n              </li>\n            {/each}\n          {/if}\n        </ul>\n      {/if}\n    </div>\n\n    <div\n      class=\"timespan\"\n      class:condensed\n      class:hide-ticks={hide_ticks}\n      on:selectstart={(event) => {\n        if (allow_event_creation) event.preventDefault();\n      }}\n    >\n      <div class=\"ticks\">\n        {#each ticks as tick}\n          <span style=\"top: {tick.relativeTickPosition * 100}%\" class=\"tick\">\n            {tick.formatted}\n          </span>\n        {/each}\n      </div>\n      <ul\n        class=\"events {theme}\"\n        class:diff-by-calendar={color_by === \"calendar\"}\n        class:diff-by-event={color_by === \"event\"}\n        class:overflowing\n        class:scrolling\n        style=\"transform:\n      translate({$dampener.x}px,0px)\"\n        bind:this={agendaElement}\n        bind:clientHeight\n        on:wheel={prevent_zoom || condensed ? () => {} : handleWheel}\n        on:pointerdown={agendaMouseDown}\n        on:pointermove={agendaMouseMove}\n        on:pointerup={agendaMouseUp}\n        on:mouseleave={agendaMouseUp}\n      >\n        <div class=\"hour-ticks\">\n          {#each ticks as tick}\n            <span style=\"top: {tick.relativeTickPosition * 100}%\" />\n          {/each}\n        </div>\n        {#if Array.isArray(events)}\n          {#each [...events, newEvent] as event}\n            {#if event && event.relativeStartTime !== undefined}\n              <li\n                tabindex=\"0\"\n                class:new-event={event.isNewEvent}\n                on:click={(ev) => eventClicked(ev, event)}\n                on:keyup={(ev) => {\n                  if (ev.key === \"Enter\") {\n                    eventClicked(ev, event);\n                  }\n                }}\n                class:expanded={expandedEventId === event.id}\n                class=\"event status-{event.attendeeStatus}\"\n                data-calendar-id={calendarIDs.indexOf(event.calendar_id) + 1}\n                style=\"top: {event.relativeStartTime * 100}%; height: \n              {condensed\n                  ? `calc(${event.relativeRunTime * 100}% - 4px)`\n                  : `calc(${event.relativeRunTime * 100}%  - 4px)`};\n              left: {event.relativeOverlapOffset * 100}%; \n              width: calc({event.relativeOverlapWidth * 100}% - 4px)\"\n              >\n                <div\n                  class=\"inner\"\n                  class:tiny-event={event.relativeRunTime <= 0.03}\n                >\n                  {#if !show_as_busy}\n                    <h2>{event.title}</h2>\n                  {:else}\n                    <h2>Busy</h2>\n                  {/if}\n                  {#if event.when && \"start_time\" in event.when}\n                    <span class=\"time\">\n                      {new Date(\n                        event.when.start_time * 1000,\n                      ).toLocaleTimeString(navigator.language, {\n                        hour: \"numeric\",\n                        minute: \"2-digit\",\n                      })}\n                    </span>\n                  {/if}\n                  {#if !show_as_busy}\n                    {#if event.location}\n                      <span class=\"location\">\n                        {#if event.locationString}\n                          <a href={event.location} target=\"_blank\">\n                            {event.locationString}\n                          </a>\n                        {:else}{event.location}{/if}\n                      </span>\n                    {/if}\n                    <p>\n                      {@html event.description || \"\"}\n                    </p>\n                  {/if}\n                </div>\n              </li>\n            {/if}\n          {/each}\n          {#if !hideCurrentTime}\n            <span class=\"now\" style=\"top: {currentTimePosition()}%;\">\n              <svg\n                width=\"39\"\n                height=\"16\"\n                viewBox=\"0 0 39 16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16H24C27.7277 16 30.8599 13.4505 31.748 10H39V6H31.748C30.8599 2.54955 27.7277 0 24 0H8ZM4 8C4 5.79086 5.79086 4 8 4H24C26.2091 4 28 5.79086 28 8C28 10.2091 26.2091 12 24 12H8C5.79086 12 4 10.2091 4 8Z\"\n                />\n              </svg>\n            </span>\n          {/if}\n        {:else if show_no_events_message && $EventStore[queryKey]}\n          <li class=\"no-events\">No events for {selectedDate.toDateString()}</li>\n        {/if}\n      </ul>\n    </div>\n  {/await}\n</main>\n"],"names":["initialize","__spreadProps","__spreadValues"],"mappings":"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"}